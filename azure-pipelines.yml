trigger:
  branches:
    include:
      - main

variables:
  imageName: ghcr.io/amansk5/nodejs-api
  tag: $(Build.BuildId)
  helmChartPath: ./nodejs-api-chart
  namespace: nodejs

stages:
  - stage: Build
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self

          - task: Docker@2
            displayName: Build Docker image
            inputs:
              command: buildAndPush
              repository: $(imageName)
              tags: |
                $(tag)
              dockerfile: dockerfile
              containerRegistry: GHCRConnection

  - stage: Secure
    displayName: Security Scans
    jobs:
      - job: LintAndScan
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self

          # Debug Step - List files in repo to confirm correct Helm directory
          - script: |
              echo "Checking repo structure..."
              ls -R /home/vsts/work/1/s/
            displayName: "List all repo files"

          - script: |
              curl -sLo kube-linter.tar.gz https://github.com/stackrox/kube-linter/releases/download/v0.6.6/kube-linter-linux.tar.gz
              tar -xzf kube-linter.tar.gz
              chmod +x kube-linter
              ./kube-linter lint ./nodejs-api-chart
            displayName: "Lint Kubernetes Manifests"

          - script: |
              npm install -g git-secrets
              git secrets --scan
            displayName: "Scan for Secrets"

          - script: |
              curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
              ./trivy image $(imageName):$(tag)
            displayName: "Run Image Vulnerability Scan"

          - script: |
              docker pull $(imageName):$(tag)
            displayName: "Validate GHCR Image Access"

  - stage: Deploy
    displayName: Deploy to AKS
    dependsOn: [Build, Secure]
    jobs:
      - deployment: DeployToAKS
        environment: aks-nodejs
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: AzureCLI@2
                  displayName: 'Set AKS context'
                  inputs:
                    azureSubscription: 'AzureSubscriptionConnection'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az aks get-credentials --resource-group devops-aks-resource-group --name devops-aks-cluster --overwrite-existing

                - task: AzureKeyVault@2
                  name: FetchSecrets
                  inputs:
                    azureSubscription: 'AzureSubscriptionConnection'
                    KeyVaultName: 'devopsaks-keyvault'
                    SecretsFilter: '*'

                - task: HelmInstaller@1
                  displayName: Install Helm
                  inputs:
                    helmVersionToInstall: 'latest'

                - script: |
                    echo "Validating Kubernetes context..."
                    kubectl config current-context
                    kubectl get pods -n $(namespace)
                  displayName: Validate Kubernetes context

                - script: |
                    echo "Listing files in the repository..."
                    ls -R /home/vsts/work/1/s/
                  displayName: 'List all files in the repository'

                - script: |
                    helm upgrade --install nodejs-api $(helmChartPath) \
                      --namespace $(namespace) \
                      --set image.repository=$(imageName) \
                      --set image.tag=$(tag) \
                      --set env.DBNAME=$(DBNAME) \
                      --set env.MONGOURI=$(MONGOURI) \
                      --set env.PORT=$(PORT)
                  displayName: Helm Upgrade
