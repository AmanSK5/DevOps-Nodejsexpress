trigger:
  branches:
    include:
      - main  # Pipeline runs on commits to the main branch

# Global Variables
variables:
  imageName: ghcr.io/amansk5/nodejs-api  # Name of the Docker image
  tag: $(Build.BuildId)  # Unique tag for each build using Azure DevOps build ID
  helmChartPath: ./nodejs-api-chart  # Path to the Helm chart directory
  namespace: nodejs  # Kubernetes namespace where the app is deployed

stages:
  - stage: Build  # Stage 1: Build and Push Docker Image
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        pool:
          name: private-agent-pool  # Uses the self-hosted agent in devops
        steps:
          - checkout: self  # Checks out the repository

          - task: Docker@2
            displayName: Build Docker image
            inputs:
              command: buildAndPush  # Builds and pushes the image to GHCR
              repository: $(imageName)
              tags: |
                $(tag)
              dockerfile: dockerfile  # Uses the Dockerfile in the root directory
              containerRegistry: GHCRConnection  # Service connection for GitHub Container Registry

  - stage: Secure  # Stage 2: Security Scans
    displayName: Security Scans
    jobs:
      - job: LintAndScan
        pool:
          name: private-agent-pool  # Uses the self-hosted agent
        steps:
          - checkout: self  # Ensures the repo is checked out

          - script: |
              echo "Checking repo structure..."
              ls -R $(Build.SourcesDirectory)  # Updated to use the correct repo path
            displayName: "List all repo files"

          - script: |
              curl -sLo kube-linter.tar.gz https://github.com/stackrox/kube-linter/releases/download/v0.6.6/kube-linter-linux.tar.gz
              tar -xzf kube-linter.tar.gz
              chmod +x kube-linter
              ./kube-linter lint ./nodejs-api-chart
            displayName: "Lint Kubernetes Manifests"

          - script: |
              npm install -g git-secrets
              git secrets --scan
            displayName: "Scan for Secrets"

          - script: |
              echo "Installing Trivy..."
              mkdir -p $HOME/bin
              curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh 
              sudo mv ./bin/trivy /usr/local/bin/trivy 
              chmod +x /usr/local/bin/trivy   
              echo "Running Trivy Scan..."
              trivy image $(imageName):$(tag)
            displayName: "Run Image Vulnerability Scan"

          - script: |
              docker pull $(imageName):$(tag)
            displayName: "Validate GHCR Image Access"

  - stage: Deploy  # Stage 3: Deploy to AKS
    displayName: Deploy to AKS
    dependsOn: [Build, Secure]  # Deploy only if Build & Secure stages succeed
    jobs:
      - deployment: DeployToAKS
        environment: aks-nodejs  # Uses Azure DevOps environment for AKS
        pool:
          name: private-agent-pool  # Uses the self-hosted agent that was deployed in AZ Devops
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self  # Ensure repo is checked out

                - task: AzureCLI@2
                  displayName: 'Set AKS context'
                  inputs:
                    azureSubscription: 'AzureSubscriptionConnection'  # Azure DevOps service connection
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az aks get-credentials --resource-group devops-aks-resource-group --name devops-aks-cluster --overwrite-existing

                - task: HelmInstaller@1
                  displayName: Install Helm
                  inputs:
                    helmVersionToInstall: 'latest'

                - script: |
                    echo "Validating Kubernetes context..."
                    kubectl config current-context
                    kubectl get pods -n $(namespace)
                  displayName: Validate Kubernetes context

                - script: |
                    echo "Listing files in the repository..."
                    ls -R $(Build.SourcesDirectory)  # Updated to use the correct repo path
                  displayName: 'List all files in the repository'

                - script: |
                    helm upgrade --install nodejs-api $(helmChartPath) \
                      --namespace $(namespace) \
                      --set image.repository=$(imageName) \
                      --set image.tag=$(tag)
                  displayName: Helm Upgrade  # Deploys the application via Helm

                # Uncomment the following step to force a restart after deployment
                # - script: |
                #     kubectl rollout restart deployment/nodejs-api -n $(namespace)
                #   displayName: Restart Deployment (Optional)

                - script: |
                    echo "Deployment completed successfully."
                  displayName: Deployment Confirmation
